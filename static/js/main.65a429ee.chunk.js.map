{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojis","Object","keys","App","emoji","setEmoji","useState","meaning","setMeaning","className","onChange","event","inputEmoji","target","value","placeholder","style","padding","minWidth","map","onClick","fontSize","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+IAGA,MAAMA,EAAkB,CACtB,qBAAO,eACP,eAAM,gBACN,eAAM,gBACN,eAAM,WACN,eAAM,YACN,eAAM,aACN,eAAM,aACN,eAAM,2BACN,eAAM,gCACN,eAAM,iBAEFC,EAASC,OAAOC,KAAKH,GAEZ,SAASI,IACtB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,mCAiBvC,OACE,sBAAKG,UAAU,MAAf,UACE,4CACA,uBACEC,SAnBN,SAAuBC,GACrB,MAAMC,EAAaD,EAAME,OAAOC,MAChCT,EAASO,GAGPJ,EADEI,KAAcb,EACLA,EAAgBa,GAEhB,mCAaTE,MAAOV,EACPW,YAAa,wCACbC,MAAO,CACLC,QAAS,OACTC,SAAU,SAGd,mCAAMd,EAAN,OACA,mCAAMG,EAAN,OACCP,EAAOmB,KAAKf,GACX,uBACEgB,QAAS,KAnBfZ,EAAWT,EAmB4BK,KACjCY,MAAO,CAAEK,SAAU,OAAQJ,QAAS,UAAWK,OAAQ,WAFzD,UAIG,IACAlB,EAAO,YCnDlB,MAAMmB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACxB,EAAD,MAEFoB,I","file":"static/js/main.65a429ee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst emojiDictionary = {\n  \"üòäÔ∏è\": \"Smiling Face\",\n  \"ü§Æ\": \"Face Vomiting\",\n  \"ü§ß\": \"Sneezing Face\",\n  \"ü•µ\": \"Hot Face\",\n  \"ü•∂\": \"Cold Face\",\n  \"ü•¥\": \"Woozy Face\",\n  \"üòµ\": \"Dizzy Face\",\n  \"üòú\": \"Winking Face with Tongue\",\n  \"ü§£\": \"Rolling on the Floor Laughing\",\n  \"üòâ\": \" Winking Face\"\n};\nconst emojis = Object.keys(emojiDictionary);\n\nexport default function App() {\n  const [emoji, setEmoji] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"translation will appear here...\");\n\n  function changeHandler(event) {\n    const inputEmoji = event.target.value;\n    setEmoji(inputEmoji);\n\n    if (inputEmoji in emojiDictionary) {\n      setMeaning(emojiDictionary[inputEmoji]);\n    } else {\n      setMeaning(\"failed to recognize this emoji\");\n    }\n  }\n\n  function emojiClickHandler(inputEmoji) {\n    setMeaning(emojiDictionary[inputEmoji]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emojipedia</h1>\n      <input\n        onChange={changeHandler}\n        value={emoji}\n        placeholder={\"put an emoji here to know the meaning\"}\n        style={{\n          padding: \"1rem\",\n          minWidth: \"80%\"\n        }}\n      />\n      <h2> {emoji} </h2>\n      <h3> {meaning} </h3>\n      {emojis.map((emoji) => (\n        <span\n          onClick={() => emojiClickHandler(emoji)}\n          style={{ fontSize: \"2rem\", padding: \"0.5 rem\", cursor: \"pointer\" }}\n        >\n          {\" \"}\n          {emoji}{\" \"}\n        </span>\n      ))}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}